extend type QueryRoot {
  """
  Returns a hacker resource by ID.
  """
  hacker(id: ID!): Hacker
}

extend type MutationRoot {
  """
  Delete a hacker resource by ID.
  """
  hackerDelete(id: ID!): HackerDeletePayload!

  """
  Updates a hacker by ID.
  """
  hackerUpdate(id: ID, input: HackerInput!): HackerUpdatePayload!
}

"""
Represents a hacker, including the hackers auth info,
contact information, and applications.
"""
type Hacker implements User {
  """
  The hackers first name.
  """
  firstName: String!
  """
  The hackers last name.
  """
  lastName: String!
  """
  The hackers full name.
  """
  fullName: String!
  """
  The hackers email.
  """
  email: String!
  """
  The hackers phone number.
  """
  phoneNumber: String
  """
  The hackers date of birth.
  """
  dateOfBirth: String
  """
  Check if the hacker has applied to a given event.
  """
  hasApplied(eventSlug: String!): Boolean!
  """
  The hacker's github profile.
  """
  githubLink: String
  """
  The hacker's linkedin profile
  """
  linkedinLink: String
  """
  The hacker's personal website
  """
  personalWebsiteLink: String
  """
  The hackers auth information.
  """
  oauthInfo: OAuthInfo!
}

input HackerInput {
  """
  The hackers first name.
  """
  firstName: String
  """
  The hackers last name.
  """
  lastName: String
  """
  The hackers email.
  """
  email: String
  """
  The hackers phone number.
  """
  phoneNumber: String
  """
  The hackers date of birth.
  """
  dateOfBirth: String
  """
  The hacker's github profile.
  """
  githubLink: String
  """
  The hacker's linkedin profile
  """
  linkedinLink: String
  """
  The hacker's personal website
  """
  personalWebsiteLink: String
}

type HackerDeletePayload {
  deletedHackerId: ID
}

type HackerUpdatePayload {
  hacker: Hacker
}
